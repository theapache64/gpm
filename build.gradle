plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.5.21'
}

apply plugin: 'kotlin-kapt'

group 'com.theapache64.gpm'
version '1.0.5'

repositories {
    mavenCentral()
    google()
    maven { url "https://jitpack.io" }
}

kapt {
    arguments {
        arg("project", "${project.group}/${project.name}")
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.5.21"

    // Picocli
    def picocli_version = '4.6.1'
    implementation "info.picocli:picocli:$picocli_version"
    kapt "info.picocli:picocli-codegen:$picocli_version"

    // Retrofit
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit_version"
    implementation 'com.squareup.moshi:moshi-kotlin:1.12.0'

    // Inquirer
    implementation 'com.github.kotlin-inquirer:kotlin-inquirer:v0.0.2-alpha'


    // Dagger
    def dagger_version = "2.38.1"
    implementation "com.google.dagger:dagger:$dagger_version"
    kapt "com.google.dagger:dagger-compiler:$dagger_version"

    // Coroutines
    def coroutines_version = "1.5.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Junit
    testImplementation group: 'junit', name: 'junit', version: '4.12'

    // ExpeKt
    testImplementation 'com.winterbe:expekt:0.5.0'

    // Mockito inline
    testImplementation('org.mockito:mockito-inline:3.11.2')

    // Mockito-koltin
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0"

    // Apache commons text
    implementation 'org.apache.commons:commons-text:1.9'

    // DaggerMock

    def dagger_mock_version = '0.8.5'
    testImplementation "com.github.fabioCollini.daggermock:daggermock:$dagger_mock_version"
    testImplementation "com.github.fabioCollini.daggermock:daggermock-kotlin:$dagger_mock_version"

    // Truth Core:Truth Core
    testImplementation 'com.google.truth:truth:1.1.3'
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

// Include dependent libraries in archive.
jar {
    manifest {
        attributes "Main-Class": "com.theapache64.gpm.MainKt"
    }
}

task fatJar(type: Jar) {
    manifest.from jar.manifest
    archiveFileName.value("gpm.main.jar")
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    } {
        exclude "META-INF/*.SF"
        exclude "META-INF/*.DSA"
        exclude "META-INF/*.RSA"
    }
    with jar
}